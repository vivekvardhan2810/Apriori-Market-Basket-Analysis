# -*- coding: utf-8 -*-
"""AprioriGssoc.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vTq6uOp82e6XzHEiqaugIMMUSssyh1If
"""

!pip install apyori

from apyori import apriori
import pandas as pd

# Load CSV file
df = pd.read_csv("/content/Market_Basket_Optimisation.csv")
df.head()

#this dataset contains 7500 rows

#data visualisation
from matplotlib import pyplot as plt

# Flatten the DataFrame into a single list of items
items = [item for row in df.values for item in row]

# Drop NaN values and count the frequency of each item
item_counts = pd.Series(items).dropna().value_counts()

# Plot histogram
item_counts[:20].plot(kind='bar')
plt.xlabel('Items')
plt.ylabel('Frequency')
plt.title('Bar Graph')
plt.show()

df.loc[:, 'shrimp':'olive oil']

#data cleaning
#nan to string
df.loc[:, 'shrimp':'olive oil'] = df.loc[:, 'shrimp':'olive oil'].applymap(str)
df.fillna('nan', inplace=True)

#list of rows

rowList = []
for index,row in df.iterrows():
    rowList.append(row.tolist())

#applying apriori
association_rules = apriori(rowList, min_support=0.05, min_confidence=0.1, min_lift=1)
association_results = list(association_rules)

for item in association_results:
    items = set(item.items)
    #nan cannot be a frequent itemset
    if 'nan' not in items and len(items) > 1:
        print("Itemset:",items)
        print("Support: ",item.support)
        for rule in item.ordered_statistics:
            if rule.items_base and rule.items_add:
                print("Base:",rule.items_base," Add:",rule.items_add)
                print("Confidence: ",rule.confidence)
                print("Lift:", rule.lift)
        print()